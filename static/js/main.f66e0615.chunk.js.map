{"version":3,"sources":["components/TaskCard/TaskCard.module.css","components/TakePhoto/TakePhoto.module.css","App.module.css","components/TasksList/TasksList.module.css","state/state.reducer.ts","state/state.context.tsx","utils/date.utils.ts","components/TaskCard/TaskCard.tsx","components/TakePhoto/TakePhoto.tsx","components/TasksList/TasksList.tsx","state/state.actions.ts","scenes/TasksScene/TasksScene.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["module","exports","reducer","state","action","type","tasks","value","task","find","t","id","taskId","photos","photo","splice","index","workEnd","workStart","Date","toISOString","travelEnd","travelStart","undefined","initialState","StateContext","React","createContext","StateProvider","children","useReducer","dispatch","Provider","formatTime","str","date","getHours","getMinutes","toString","padStart","e","TaskCard","className","onPhotoRemove","onCompleteStep","onPhotoAddStart","onReset","cn","s","wrapper","location","description","milestones","milestone","complete","buttons","completeButton","onClick","disabled","resetButton","map","idx","src","remove","addPhoto","memo","TakePhoto","onPhoto","onCancel","videoRef","useRef","useState","stream","setStream","ready","setReady","initStream","useCallback","a","current","addEventListener","console","log","navigator","mediaDevices","getUserMedia","audio","video","facingMode","srcObject","useEffect","getTracks","forEach","track","stop","ref","autoPlay","muted","playsInline","backButton","takePhotoButton","videoCanvas","document","createElement","height","videoHeight","width","videoWidth","videoContext","getContext","drawImage","dataUrl","toDataURL","TasksList","onPhotoAdd","onTaskReset","photoTaskId","setPhotoTaskId","data","LoadTasksAction","AddPhotoAction","RemovePhotoAction","CompleteStepAction","ResetTaskAction","TasksScene","useContext","fetch","response","json","fetchData","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","headers","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f66e0615.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TaskCard_wrapper__2pwFH\",\"milestones\":\"TaskCard_milestones__aQ1Fm\",\"milestone\":\"TaskCard_milestone__1ZgSQ\",\"complete\":\"TaskCard_complete__2qkrJ\",\"photos\":\"TaskCard_photos__2EWg6\",\"photo\":\"TaskCard_photo__qubp1\",\"addPhoto\":\"TaskCard_addPhoto__2k0jz\",\"remove\":\"TaskCard_remove__5Qf8u\",\"buttons\":\"TaskCard_buttons__1SyS5\",\"completeButton\":\"TaskCard_completeButton__oOeo0\",\"resetButton\":\"TaskCard_resetButton__3Nj-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TakePhoto_wrapper__2IAC6\",\"video\":\"TakePhoto_video__3jRgH\",\"buttons\":\"TakePhoto_buttons__10Dcp\",\"backButton\":\"TakePhoto_backButton__mVHoW\",\"takePhotoButton\":\"TakePhoto_takePhotoButton__3jwSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2yWJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TasksList_wrapper__19HVx\"};","import { Task } from '../models/Task';\r\nimport { Action, ResetTaskAction } from './state.actions';\r\n\r\nexport type State = {\r\n    tasks: Task[];\r\n};\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case 'LoadTasks':\r\n            return {\r\n                ...state,\r\n                tasks: [...action.value],\r\n            };\r\n\r\n        case 'AddPhoto': {\r\n            const task = state.tasks.find(t => t.id === action.taskId);\r\n            if (!task) {\r\n                return state;\r\n            }\r\n            task.photos = [...task.photos || [], action.photo];\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks],\r\n            };\r\n        }\r\n\r\n        case 'RemovePhoto': {\r\n            const task = state.tasks.find(t => t.id === action.taskId);\r\n            if (!task) {\r\n                return state;\r\n            }\r\n            task.photos.splice(action.index, 1);\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks],\r\n            };\r\n        }\r\n\r\n        case 'CompleteStep': {\r\n            const task = state.tasks.find(t => t.id === action.taskId);\r\n            if (!task) {\r\n                return state;\r\n            }\r\n            if (task.workEnd) {\r\n                return state;\r\n            } else if (task.workStart) {\r\n                task.workEnd = new Date().toISOString();\r\n            } else if (task.travelEnd) {\r\n                task.workStart = new Date().toISOString();\r\n            } else if (task.travelStart) {\r\n                task.travelEnd = new Date().toISOString();\r\n            } else {\r\n                task.travelStart = new Date().toISOString();\r\n            }\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks],\r\n            };\r\n        }\r\n\r\n        case 'ResetTask': {\r\n            const task = state.tasks.find(t => t.id === action.taskId);\r\n            if (!task) {\r\n                return state;\r\n            }\r\n\r\n            task.workEnd = undefined;\r\n            task.workStart = undefined;\r\n            task.travelEnd = undefined;\r\n            task.travelStart = undefined;\r\n\r\n            return {\r\n                ...state,\r\n                tasks: [...state.tasks],\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initialState: State = {\r\n    tasks: [],\r\n};\r\n","import { initialState, reducer, State } from './state.reducer';\r\nimport React, { ReactNode } from 'react';\r\nimport { Action } from './state.actions';\r\n\r\nexport const StateContext = React.createContext<\r\n    [State, (action: Action) => void]\r\n>([initialState, () => {}]);\r\n\r\nexport const StateProvider = ({ children }: { children: ReactNode }) => {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    return (\r\n        <StateContext.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n","export const formatTime = (str?: string): string => {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n    try {\r\n        const date = new Date(str);\r\n        return `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n    } catch (e) {\r\n        return '';\r\n    }\r\n};\r\n","import { FC, memo } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './TaskCard.module.css';\r\nimport { Task } from '../../models/Task';\r\nimport { formatTime } from '../../utils/date.utils';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    task: Task;\r\n    onPhotoRemove: (idx: number) => void;\r\n    onCompleteStep: () => void;\r\n    onReset: () => void;\r\n    onPhotoAddStart: () => void;\r\n}\r\n\r\nconst TaskCard: FC<IProps> = ({ className, task, onPhotoRemove, onCompleteStep, onPhotoAddStart, onReset }) => {\r\n    return (\r\n        <div className={cn(s.wrapper, className)}>\r\n            <header>\r\n                <div><b>{task.location}</b></div>\r\n                <div>{task.description}</div>\r\n            </header>\r\n            <div className={s.milestones}>\r\n                <ul>\r\n                    <li className={cn(s.milestone, task.travelStart && s.complete)}>\r\n                        <b>Travel started </b>\r\n                        <span>{formatTime(task.travelStart)}</span>\r\n                    </li>\r\n                    {task.travelStart && <li className={cn(s.milestone, task.travelEnd && s.complete)}>\r\n                      <b>Travel finished </b>\r\n                      <span>{formatTime(task.travelEnd)}</span>\r\n                    </li>}\r\n                    {task.travelEnd &&\r\n                    <li className={cn(s.milestone, task.workStart && s.complete)}>\r\n                      <b>Work started </b>\r\n                      <span>{formatTime(task.workStart)}</span>\r\n                    </li>\r\n                    }\r\n                    {task.workStart &&\r\n                    <li className={cn(s.milestone, task.workEnd && s.complete)}>\r\n                      <b>Work finished </b>\r\n                      <span>{formatTime(task.workEnd)}</span>\r\n                    </li>\r\n                    }\r\n                </ul>\r\n                <div className={s.buttons}>\r\n                    <button className={s.completeButton} onClick={onCompleteStep} disabled={!!task.workEnd}>▶</button>\r\n                    <button className={s.resetButton} onClick={onReset}>Reset</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.photos}>\r\n                {task.photos && task.photos.map((photo, idx) =>\r\n                    <div className={s.photo} onClick={() => onPhotoRemove(idx)}>\r\n                        <img src={photo}/>\r\n                        <span className={s.remove}>×</span>\r\n                    </div>,\r\n                )}\r\n                <div className={s.addPhoto} onClick={onPhotoAddStart}>\r\n                    +\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(TaskCard);\r\n","import { FC, useRef, useState, useEffect, useCallback } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './TakePhoto.module.css';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    onPhoto: (dataUrl: string) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nconst TakePhoto: FC<IProps> = ({ onPhoto, onCancel }) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    const [stream, setStream] = useState<MediaStream | null>(null);\r\n    const [ready, setReady] = useState<boolean>(false);\r\n\r\n    const initStream = useCallback(async () => {\r\n        if (videoRef.current) {\r\n            videoRef.current.addEventListener('loadedmetadata', () => {\r\n                console.log('video ready');\r\n                setReady(true);\r\n            });\r\n            videoRef.current.addEventListener('ended', () => {\r\n                console.log('stream ended');\r\n                setStream(null);\r\n                setReady(false);\r\n            });\r\n            const s = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: {\r\n                    facingMode: 'environment',\r\n                },\r\n            });\r\n            console.log('setting stream');\r\n            setStream(s);\r\n            videoRef.current.srcObject = s;\r\n        }\r\n    }, []);\r\n\r\n    const takePhoto = () => {\r\n        const video = videoRef.current;\r\n        if (!video) {\r\n            return;\r\n        }\r\n        const videoCanvas = document.createElement('canvas');\r\n        const scaleDownFactor = 2;\r\n        videoCanvas.height = video.videoHeight / scaleDownFactor;\r\n        videoCanvas.width = video.videoWidth / scaleDownFactor;\r\n        const videoContext = videoCanvas.getContext('2d');\r\n\r\n        if (!videoContext) {\r\n            return;\r\n        }\r\n        videoContext.drawImage(video, 0, 0, video.videoWidth / scaleDownFactor, video.videoHeight / scaleDownFactor);\r\n\r\n        const dataUrl = videoCanvas.toDataURL('image/webp', 0.8);\r\n        onPhoto(dataUrl);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!stream) {\r\n            initStream();\r\n        }\r\n        return () => {\r\n            stream && stream.getTracks().forEach(function (track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }, [initStream, stream]);\r\n\r\n    return (\r\n        <div className={cn(s.wrapper)}>\r\n            <video className={s.video} ref={videoRef} autoPlay muted playsInline/>\r\n            <div className={s.buttons}>\r\n                <button className={s.backButton} onClick={onCancel} disabled={!ready}>Back</button>\r\n                <button className={s.takePhotoButton} onClick={takePhoto} disabled={!ready}>Take photo!</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (TakePhoto);\r\n","import React, { FC, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './TasksList.module.css';\r\nimport { Task } from '../../models/Task';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport TakePhoto from '../TakePhoto/TakePhoto';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    tasks: Task[];\r\n    onPhotoAdd: (taskId: string, data: string) => void;\r\n    onPhotoRemove: (taskId: string, index: number) => void;\r\n    onCompleteStep: (taskId: string) => void;\r\n    onTaskReset: (taskId: string) => void;\r\n}\r\n\r\nconst TasksList: FC<IProps> = ({ className, onPhotoRemove, tasks, onCompleteStep, onPhotoAdd, onTaskReset }) => {\r\n    const [photoTaskId, setPhotoTaskId] = useState<string | null>(null);\r\n\r\n    return (\r\n        <div className={cn(s.wrapper, className)}>\r\n            <ul>\r\n                {tasks.map(task => <li>\r\n                    <TaskCard task={task}\r\n                              onPhotoRemove={index => onPhotoRemove(task.id, index)}\r\n                              onPhotoAddStart={() => setPhotoTaskId(task.id)}\r\n                              onCompleteStep={() => onCompleteStep(task.id)}\r\n                              onReset={() => onTaskReset(task.id)}/>\r\n                </li>)}\r\n            </ul>\r\n            {photoTaskId && <TakePhoto onCancel={() => setPhotoTaskId(null)} onPhoto={(data) => {\r\n                onPhotoAdd(photoTaskId, data);\r\n                setPhotoTaskId(null);\r\n            }}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (TasksList);\r\n","import { Task } from '../models/Task';\r\n\r\nexport class LoadTasksAction {\r\n    readonly type = 'LoadTasks';\r\n\r\n    constructor(readonly value: Task[]) {\r\n    }\r\n}\r\n\r\nexport class AddPhotoAction {\r\n    readonly type = 'AddPhoto';\r\n\r\n    constructor(readonly taskId: string, readonly photo: string) {\r\n    }\r\n}\r\n\r\nexport class RemovePhotoAction {\r\n    readonly type = 'RemovePhoto';\r\n\r\n    constructor(readonly taskId: string, readonly index: number) {\r\n    }\r\n}\r\n\r\nexport class CompleteStepAction {\r\n    readonly type = 'CompleteStep';\r\n\r\n    constructor(readonly taskId: string) {\r\n    }\r\n}\r\n\r\nexport class ResetTaskAction {\r\n    readonly type = 'ResetTask';\r\n\r\n    constructor(readonly taskId: string) {\r\n    }\r\n}\r\n\r\nexport type Action = LoadTasksAction | AddPhotoAction | RemovePhotoAction | CompleteStepAction | ResetTaskAction;\r\n","import React, { FC, useContext, useEffect } from 'react';\r\n\r\nimport s from './TasksScene.module.css';\r\nimport TasksList from '../../components/TasksList/TasksList';\r\nimport { StateContext } from '../../state/state.context';\r\nimport { Task } from '../../models/Task';\r\nimport {\r\n    LoadTasksAction,\r\n    AddPhotoAction,\r\n    RemovePhotoAction,\r\n    CompleteStepAction,\r\n    ResetTaskAction,\r\n} from '../../state/state.actions';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst TasksScene: FC<IProps> = () => {\r\n    const [{ tasks }, dispatch] = useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await fetch('https://api.npoint.io/3f4c4bcb193491b0b146');\r\n            const tasks: Task[] = await response.json();\r\n            dispatch(new LoadTasksAction(tasks));\r\n        }\r\n\r\n        fetchData();\r\n    }, [dispatch]);\r\n\r\n    const savePhoto = (taskId: string, dataUrl: string) => {\r\n        dispatch(new AddPhotoAction(taskId, dataUrl));\r\n    };\r\n\r\n    return (<div className={s.wrapper}>\r\n            <TasksList tasks={tasks}\r\n                       onPhotoRemove={(taskId, index) => dispatch(new RemovePhotoAction(taskId, index))}\r\n                       onPhotoAdd={savePhoto}\r\n                       onCompleteStep={(taskId) => dispatch(new CompleteStepAction(taskId))}\r\n                       onTaskReset={(taskId) => dispatch(new ResetTaskAction(taskId))}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (TasksScene);\r\n","import React from 'react';\nimport s from './App.module.css';\nimport { StateProvider } from './state/state.context';\nimport TasksScene from './scenes/TasksScene/TasksScene';\n\nconst App = () => {\n    return (\n        <div className={s.wrapper}>\n            <StateProvider>\n                <TasksScene/>\n            </StateProvider>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}