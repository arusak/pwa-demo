{"version":3,"sources":["components/TaskCard/TaskCard.module.css","components/TakePhoto/TakePhoto.module.css","App.module.css","components/TasksList/TasksList.module.css","state/state.reducer.ts","state/state.context.tsx","utils/date.utils.ts","utils/image.utils.ts","components/TaskCard/TaskCard.tsx","components/TakePhoto/TakePhoto.tsx","components/TasksList/TasksList.tsx","state/state.actions.ts","services/data.service.ts","scenes/TasksScene/TasksScene.tsx","App.tsx","hooks/useEventListener.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["module","exports","reducer","state","action","type","tasks","value","taskIdx","findIndex","t","_id","task","initialState","StateContext","createContext","StateProvider","children","useReducer","dispatch","Provider","formatTime","str","date","Date","getHours","getMinutes","toString","padStart","e","getImageFromFile","source","reader","FileReader","promise","Promise","resolve","reject","addEventListener","evt","target","readyState","DONE","image","Image","src","result","readAsDataURL","getWebpDataUrl","sourceWidth","HTMLVideoElement","videoWidth","width","sourceHeight","videoHeight","height","scaleDownFactor","Math","max","outputWidth","outputHeight","canvas","document","createElement","ctx","getContext","Error","drawImage","toDataURL","TaskCard","props","className","onPhotoRemove","onCompleteStep","onPhotoCaptureStart","onReset","onImageAdded","handleFile","a","file","files","dataUrl","cn","s","wrapper","location","description","milestones","milestone","travelStart","complete","travelEnd","workStart","workEnd","buttons","completeButton","onClick","disabled","resetButton","photos","map","photo","idx","alt","remove","photoButtons","addPhoto","accept","capture","onChange","memo","TakePhoto","onPhoto","onCancel","videoRef","useRef","useState","stream","setStream","isVideoReady","setReady","undefined","capabilities","setCapabilities","initStream","useCallback","current","console","log","getVideoTracks","getCapabilities","play","navigator","mediaDevices","getUserMedia","audio","video","facingMode","srcObject","useEffect","pause","getTracks","forEach","track","stop","handleTorchClick","isTorchOn","tracks","videoTrack","torch","applyConstraints","advanced","then","ref","muted","playsInline","backButton","takePhotoButton","torchButton","style","fontSize","JSON","stringify","TasksList","onPhotoAdd","onTaskReset","photoTask","setPhotoTask","index","data","LoadTasksAction","UpdateTaskAction","base","fetch","response","json","updateTask","content","method","headers","body","TasksScene","useContext","fetchTasks","updated","splice","toISOString","version","process","App","beforeInstallEvent","setBeforeInstallEvent","isAccepted","setAccepted","eventName","handler","element","window","handlerRef","eventListener","event","removeEventListener","useEventListener","preventDefault","addToHome","prompt","userChoice","choiceResult","outcome","setTimeout","accepted","footer","userAgent","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","href","origin","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,WAAa,6BAA6B,UAAY,4BAA4B,SAAW,2BAA2B,OAAS,yBAAyB,MAAQ,wBAAwB,aAAe,+BAA+B,SAAW,2BAA2B,OAAS,yBAAyB,QAAU,0BAA0B,eAAiB,iCAAiC,YAAc,gC,qBCA1cD,EAAOC,QAAU,CAAC,QAAU,2BAA2B,MAAQ,yBAAyB,QAAU,2BAA2B,WAAa,8BAA8B,gBAAkB,qC,oBCA1LD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,UAAY,uBAAuB,SAAW,wB,qCCA5HD,EAAOC,QAAU,CAAC,QAAU,6B,yKCMfC,EAAU,SAACC,EAAcC,GAClC,OAAQA,EAAOC,MACX,IAAK,YACD,OAAO,2BACAF,GADP,IAEIG,MAAM,YAAKF,EAAOG,SAG1B,IAAK,aACD,IAAMC,EAAUL,EAAMG,MAAMG,WAAU,SAAAC,GAAC,OAAIA,EAAEC,MAAQP,EAAOQ,KAAKD,OACjE,IAAKH,EACD,OAAOL,EAEX,IAAMG,EAAQH,EAAMG,MAEpB,OADAA,EAAME,GAAN,eAAsBJ,EAAOQ,MACtB,2BACAT,GADP,IAEIG,MAAM,YAAKA,KAInB,QACI,OAAOH,IAINU,EAAsB,CAC/BP,MAAO,I,OC9BEQ,EAAeC,wBAE1B,CAACF,EAAc,eAEJG,EAAgB,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAC5B,EAA0BC,qBAAWhB,EAASW,GAA9C,mBAAOV,EAAP,KAAcgB,EAAd,KACA,OACI,cAACL,EAAaM,SAAd,CAAuBb,MAAO,CAACJ,EAAOgB,GAAtC,SACKF,K,yFCZAI,EAAa,SAACC,GACvB,IAAKA,EACD,MAAO,GAEX,IACI,IAAMC,EAAO,IAAIC,KAAKF,GACtB,MAAM,GAAN,OAAUC,EAAKE,WAAf,YAA6BF,EAAKG,aAAaC,WAAWC,SAAS,EAAG,MACxE,MAAOC,GACL,MAAO,KCLFC,EAAmB,SAACC,GAC7B,IAAMC,EAAS,IAAIC,WACbC,EAAU,IAAIC,SAA0B,SAACC,EAASC,GACpDL,EAAOM,iBAAiB,QAAQ,SAAAC,GAAQ,IAAD,EACnC,IAAI,UAAAA,EAAIC,cAAJ,eAAYC,cAAeR,WAAWS,KAAM,CAC5C,IAAMC,EAAQ,IAAIC,MAClBD,EAAML,iBAAiB,QAAQ,kBAAMF,EAAQO,MAC7CA,EAAME,IAAMN,EAAIC,OAAOM,YAEvBT,EAAO,kCAKnB,OADAL,EAAOe,cAAchB,GACdG,GAGEc,EAAiB,SAACjB,GAC3B,IAAMkB,EAAclB,aAAkBmB,iBAAmBnB,EAAOoB,WAAapB,EAAOqB,MAC9EC,EAAetB,aAAkBmB,iBAAmBnB,EAAOuB,YAAcvB,EAAOwB,OAChFC,EAAkBC,KAAKC,IAAIL,EAtBnB,IAsB6CJ,EAvB9C,IAuBsE,GAC7EU,EAAcV,EAAcO,EAC5BI,EAAeP,EAAeG,EAE9BK,EAASC,SAASC,cAAc,UACtCF,EAAON,OAASK,EAChBC,EAAOT,MAAQO,EACf,IAAMK,EAAMH,EAAOI,WAAW,MAE9B,IAAKD,EACD,MAAM,IAAIE,MAAM,4BAKpB,OAFAF,EAAIG,UAAUpC,EAAQ,EAAG,EAAG4B,EAAaC,GAElCC,EAAOO,UAAU,aAAc,KCpBpCC,EAAuB,SAACC,GAC1B,IACIC,EAOAD,EAPAC,UACA3D,EAMA0D,EANA1D,KACA4D,EAKAF,EALAE,cACAC,EAIAH,EAJAG,eACAC,EAGAJ,EAHAI,oBACAC,EAEAL,EAFAK,QACAC,EACAN,EADAM,aAGEC,EAAU,uCAAG,WAAOtC,GAAP,mBAAAuC,EAAA,2DACTC,EAAOxC,EAAIC,OAAOwC,OAASzC,EAAIC,OAAOwC,MAAM,IADnC,gCAGSlD,EAAiBiD,GAH1B,OAGLpC,EAHK,OAILsC,EAAUjC,EAAeL,GAC/BiC,EAAaK,GALF,2CAAH,sDAQhB,OACI,sBAAKV,UAAWW,IAAGC,IAAEC,QAASb,GAA9B,UACI,mCACI,8BAAK,4BAAI3D,EAAKyE,aACd,8BAAMzE,EAAK0E,iBAEf,sBAAKf,UAAWY,IAAEI,WAAlB,UACI,+BACI,qBAAIhB,UAAWW,IAAGC,IAAEK,UAAW5E,EAAK6E,aAAeN,IAAEO,UAArD,UACI,gDACA,+BAAOrE,EAAWT,EAAK6E,kBAE1B7E,EAAK6E,aAAe,qBAAIlB,UAAWW,IAAGC,IAAEK,UAAW5E,EAAK+E,WAAaR,IAAEO,UAAnD,UACnB,iDACA,+BAAOrE,EAAWT,EAAK+E,gBAExB/E,EAAK+E,WACN,qBAAIpB,UAAWW,IAAGC,IAAEK,UAAW5E,EAAKgF,WAAaT,IAAEO,UAAnD,UACE,8CACA,+BAAOrE,EAAWT,EAAKgF,gBAGxBhF,EAAKgF,WACN,qBAAIrB,UAAWW,IAAGC,IAAEK,UAAW5E,EAAKiF,SAAWV,IAAEO,UAAjD,UACE,+CACA,+BAAOrE,EAAWT,EAAKiF,iBAI7B,sBAAKtB,UAAWY,IAAEW,QAAlB,UACI,wBAAQvB,UAAWY,IAAEY,eAAgBC,QAASvB,EAAgBwB,WAAYrF,EAAKiF,QAA/E,oBACA,wBAAQtB,UAAWY,IAAEe,YAAaF,QAASrB,EAA3C,yBAGR,qBAAKJ,UAAWY,IAAEgB,OAAlB,SACKvF,EAAKuF,QAAUvF,EAAKuF,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAC5B,sBAAe/B,UAAWY,IAAEkB,MAAOL,QAAS,kBAAMxB,EAAc8B,IAAhE,UACI,qBAAKC,IAAI,GAAG1D,IAAKwD,IACjB,sBAAM9B,UAAWY,IAAEqB,OAAnB,oBAFMF,QAMlB,sBAAK/B,UAAWY,IAAEsB,aAAlB,UACI,qBAAKlC,UAAWY,IAAEuB,SAAUV,QAAStB,EAArC,0BAGA,wBAAOH,UAAWY,IAAEuB,SAApB,yBAEI,uBAAOnC,UAAU,kBAAkBlE,KAAK,OAAOsG,OAAO,UAAUC,QAAQ,cACjEC,SAAUhC,OAErB,wBAAON,UAAWY,IAAEuB,SAApB,yBAEI,uBAAOnC,UAAU,kBAAkBlE,KAAK,OAAOsG,OAAO,UAC/CE,SAAUhC,cAOtBiC,iBAAKzC,G,gBCGJ0C,EAzFc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAChCC,EAAWC,iBAAyB,MAE1C,EAA4BC,mBAA6B,MAAzD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAiCF,oBAAkB,GAAnD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,wBAA6CK,GAArF,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAaC,sBAAW,sBAAC,4BAAA/C,EAAA,0DACvBoC,EAASY,QADc,wBAEvBZ,EAASY,QAAQxF,iBAAiB,kBAAkB,WAChDyF,QAAQC,IAAI,eACZ,IAAMN,EAAY,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAQY,iBAAiB,GAAGC,kBACjDP,EAAgBD,GAChBF,GAAS,MAEbN,EAASY,QAAQxF,iBAAiB,cAAc,WAC5C4E,EAASY,SAAWZ,EAASY,QAAQK,UAEzCjB,EAASY,QAAQxF,iBAAiB,SAAS,WACvCyF,QAAQC,IAAI,gBACZV,EAAU,MACVE,GAAS,MAdU,SAgBPY,UAAUC,aAAaC,aAAa,CAChDC,OAAO,EACPC,MAAO,CACHC,WAAY,iBAnBG,OAgBjBtD,EAhBiB,OAsBvB4C,QAAQC,IAAI,kBACZV,EAAUnC,GACV+B,EAASY,QAAQY,UAAYvD,EAxBN,4CA0B5B,CAACkC,IAUJsB,qBAAU,WACN,IAAMH,EAAQtB,EAASY,QAIvB,OAHKT,GACDO,IAEG,WACHY,GAASA,EAAMI,QACfvB,GAAUA,EAAOwB,YAAYC,SAAQ,SAAUC,GAC3CA,EAAMC,aAGf,CAACpB,EAAYP,IAEhB,IAAM4B,EAAmBpB,uBAAY,SAACqB,GAClC,IAAMC,EAAM,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAQY,iBACjBmB,EAAaD,GAAUA,EAAO,GAChCC,GAAc7B,GAEVG,EAAa2B,OACbD,EAAWE,iBAAiB,CAExBC,SAAU,CAAC,CAAEF,MAAOH,MACrBM,MAAK,WACJzB,QAAQC,IAAR,mBAAyBkB,EAAY,KAAO,aAIzD,QAACxB,QAAD,IAACA,OAAD,EAACA,EAAc2B,MAAO9B,EAAcF,IAEvC,OACI,sBAAK9C,UAAWW,IAAGC,IAAEC,SAArB,UACI,uBAAOb,UAAWY,IAAEqD,MAAOiB,IAAKvC,EAAUwC,OAAK,EAACC,aAAW,IAC3D,sBAAKpF,UAAWY,IAAEW,QAAlB,UACI,wBAAQvB,UAAWY,IAAEyE,WAAY5D,QAASiB,EAA1C,kBACA,wBAAQ1C,UAAWY,IAAE0E,gBAAiB7D,QA1ChC,WACd,IAAMwC,EAAQtB,EAASY,QAClBU,GAGLxB,EAAQhE,EAAewF,KAqC2CvC,UAAWsB,EAArE,yBACA,wBAAQhD,UAAWY,IAAE2E,YAAa9D,QAAS,kBAAMiD,GAAiB,IAC1DhD,UAAWsB,EADnB,sBAIJ,qBAAKwC,MAAO,CAAEC,SAAU,QAAxB,SACKC,KAAKC,UAAUxC,SCpDhByC,EA1Bc,SAAC,GAAkF,IAAhF5F,EAA+E,EAA/EA,UAAWC,EAAoE,EAApEA,cAAelE,EAAqD,EAArDA,MAAOmE,EAA8C,EAA9CA,eAAgB2F,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC1F,EAAkCjD,mBAAsB,MAAxD,mBAAOkD,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAKhG,UAAWW,IAAGC,IAAEC,QAASb,GAA9B,UACI,6BACKjE,EAAM8F,KAAI,SAAAxF,GAAI,OACX,6BACI,cAAC,EAAD,CACIA,KAAMA,EACN4D,cAAe,SAAAgG,GAAK,OAAIhG,EAAc5D,EAAM4J,IAC5C9F,oBAAqB,kBAAM6F,EAAa3J,IACxCgE,aAAc,SAAA6F,GAAI,OAAIL,EAAWxJ,EAAM6J,IACvChG,eAAgB,kBAAMA,EAAe7D,IACrC+D,QAAS,kBAAM0F,EAAYzJ,OAP1BA,EAAKD,UAWrB2J,GAAa,cAAC,EAAD,CAAWrD,SAAU,kBAAMsD,EAAa,OAAOvD,QAAS,SAACyD,GACnEL,EAAWE,EAAWG,GACtBF,EAAa,a,eCnChBG,EAAb,aAGI,WAAqBnK,GAAgB,yBAAhBA,QAAe,KAF3BF,KAAO,eAMPsK,EAAb,aAGI,WAAqB/J,GAAa,yBAAbA,OAAY,KAFxBP,KAAO,gB,kBCRduK,EAAO,4D,4CAEN,8BAAA9F,EAAA,sEACoB+F,MAAM,GAAD,OAAID,EAAJ,WADzB,cACGE,EADH,gBAEyBA,EAASC,OAFlC,cAEGzK,EAFH,yBAGIA,GAHJ,4C,sBAMA,SAAe0K,EAAtB,kC,4CAAO,WAA0BpK,GAA1B,mBAAAkE,EAAA,6DACKnE,EAAoBC,EAApBD,IAAQsK,EADb,YACyBrK,EADzB,YAEoBiK,MAAM,GAAD,OAAID,EAAJ,kBAAkBjK,GAAO,CACjDuK,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMnB,KAAKC,UAAUe,KALtB,cAEGH,EAFH,yBAOIA,GAPJ,4C,sBCEP,IA+DgBO,EA/De,WAC3B,MAA8BC,qBAAWxK,GAAzC,mBAASR,EAAT,KAASA,MAASa,EAAlB,KAEAwH,qBAAU,YDXP,WAAP,gCCYQ4C,GAAa/B,MAAK,SAAAlJ,GAAK,OAAIa,EAAS,IAAIuJ,EAAgBpK,SACzD,CAACa,IA+CJ,OAAQ,qBAAKoD,UAAWY,IAAEC,QAAlB,SACA,cAAC,EAAD,CAAW9E,MAAOA,EACPkE,cAvCC,SAAC5D,EAAY4J,GAC7B,IAAMrE,EAAM,YAAOvF,EAAKuF,QAClBqF,EAAO,2BAAQ5K,GAAR,IAAcuF,OAAQA,EAAOsF,OAAOjB,EAAO,KACxDQ,EAAWQ,GACXrK,EAAS,IAAIwJ,EAAiBa,KAoCfpB,WAhDD,SAACxJ,EAAYqE,GAC3B,IAAMkB,EAASvF,EAAKuF,QAAU,GACxBqF,EAAO,2BAAQ5K,GAAR,IAAcuF,OAAO,GAAD,mBAAMA,GAAN,CAAclB,MAC/C+F,EAAWQ,GACXrK,EAAS,IAAIwJ,EAAiBa,KA6Cf/G,eAlCF,SAAC7D,GACd,IAAM4K,EAAO,eACN5K,GAEH4K,EAAQ3F,UACD2F,EAAQ5F,UACf4F,EAAQ3F,SAAU,IAAIrE,MAAOkK,cACtBF,EAAQ7F,UACf6F,EAAQ5F,WAAY,IAAIpE,MAAOkK,cACxBF,EAAQ/F,YACf+F,EAAQ7F,WAAY,IAAInE,MAAOkK,cAE/BF,EAAQ/F,aAAc,IAAIjE,MAAOkK,eAErCV,EAAWQ,GACXrK,EAAS,IAAIwJ,EAAiBa,KAoBfnB,YAjBD,SAACzJ,GACf,IAAM4K,EAAO,2BACN5K,GADM,IAETiF,aAAS4B,EACT7B,eAAW6B,EACX9B,eAAW8B,EACXhC,iBAAagC,IAEjBuD,EAAWQ,GACXrK,EAAS,IAAIwJ,EAAiBa,UCvDhCG,EAAUC,QAqCDC,EAnCH,WACR,MAAoDzE,mBAA0C,MAA9F,mBAAO0E,EAAP,KAA2BC,EAA3B,KACA,EAAkC3E,oBAAS,GAA3C,mBAAO4E,EAAP,KAAmBC,EAAnB,MCR4B,SAACC,EAAmBC,GAAoE,IAAxCC,EAAuC,uDAAXC,OAClGC,EAAanF,mBAMnBwB,qBAAU,WACN2D,EAAWxE,QAAUqE,IACtB,CAACA,IAEJxD,qBACI,WACI,GAAK2D,EAAWxE,QAAhB,CAGA,IAAMqE,EAAUG,EAAWxE,QACrByE,EAAgB,SAACC,GAAD,OAAkBL,EAAQK,IAGhD,OAFAJ,EAAQ9J,iBAAiB4J,EAAWK,GAE7B,WACHH,EAAQK,oBAAoBP,EAAWK,OAG/C,CAACL,EAAWE,IDdhBM,CAAiB,uBAAuB,SAACnK,GACrCA,EAAIoK,iBACJZ,EAAsBxJ,MAG1B,IAAmBA,EAWnB,OACI,sBAAKgC,UAAWY,IAAEC,QAAlB,UACK0G,GACD,wBAAQvH,UAAWY,IAAEyH,UAAW5G,SAdrBzD,EAcwCuJ,EAdN,WACjDvJ,EAAIsK,SAEJtK,EAAIuK,WAAWtD,MAAK,SAACuD,GACjBd,EAAqC,aAAzBc,EAAaC,SACzBC,YAAW,kBAAMhB,GAAY,KAAQ,KACrCF,EAAsB,WAQtB,yBAECC,GAAc,qBAAKzH,UAAWY,IAAE+H,SAAlB,kCACf,cAAC,EAAD,UACI,cAAC,EAAD,MAGQ,yBAAQ3I,UAAWY,IAAEgI,OAArB,qBAAsCxB,EAAtC,OAAmDvD,UAAUgF,iBE1B/EC,EAAcC,QACW,cAA7BjB,OAAOhH,SAASkI,UAEe,UAA7BlB,OAAOhH,SAASkI,UAEhBlB,OAAOhH,SAASkI,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCvF,UAAUwF,cACPC,SAASH,GACTlE,MAAK,SAACsE,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7N,QACfiI,UAAUwF,cAAcO,YAI1BpG,QAAQC,IACN,+GAKE2F,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlB/F,QAAQC,IAAI,sCAGR2F,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BQ,OAAM,SAACC,GACNxG,QAAQwG,MAAM,4CAA6CA,MC5FjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5K,SAAS6K,eAAe,SDcnB,SAAkBhB,GACvB,GAA6C,kBAAmBvF,UAAW,CAGzE,GADkB,IAAIwG,IAAIhD,YAAwBS,OAAOhH,SAASwJ,MACpDC,SAAWzC,OAAOhH,SAASyJ,OAIvC,OAGFzC,OAAO/J,iBAAiB,QAAQ,WAC9B,IAAMoL,EAAK,UAAM9B,YAAN,sBAEPyB,IAgEV,SAAiCK,EAAeC,GAE9C9C,MAAM6C,EAAO,CACXvC,QAAS,CAAE,iBAAkB,YAE5B3B,MAAK,SAACsB,GAEL,IAAMiE,EAAcjE,EAASK,QAAQ6D,IAAI,gBAEnB,MAApBlE,EAASmE,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9G,UAAUwF,cAAcuB,MAAM3F,MAAK,SAACsE,GAClCA,EAAasB,aAAa5F,MAAK,WAC7B6C,OAAOhH,SAASgK,eAKpB5B,EAAgBC,EAAOC,MAG1BW,OAAM,WACLvG,QAAQC,IAAI,oEAtFVsH,CAAwB5B,EAAOC,GAI/BvF,UAAUwF,cAAcuB,MAAM3F,MAAK,WACjCzB,QAAQC,IACN,+GAMJyF,EAAgBC,EAAOC,OCvC/B4B,K","file":"static/js/main.cecba71f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TaskCard_wrapper__2pwFH\",\"milestones\":\"TaskCard_milestones__aQ1Fm\",\"milestone\":\"TaskCard_milestone__1ZgSQ\",\"complete\":\"TaskCard_complete__2qkrJ\",\"photos\":\"TaskCard_photos__2EWg6\",\"photo\":\"TaskCard_photo__qubp1\",\"photoButtons\":\"TaskCard_photoButtons__2b_1j\",\"addPhoto\":\"TaskCard_addPhoto__2k0jz\",\"remove\":\"TaskCard_remove__5Qf8u\",\"buttons\":\"TaskCard_buttons__1SyS5\",\"completeButton\":\"TaskCard_completeButton__oOeo0\",\"resetButton\":\"TaskCard_resetButton__3Nj-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TakePhoto_wrapper__2IAC6\",\"video\":\"TakePhoto_video__3jRgH\",\"buttons\":\"TakePhoto_buttons__10Dcp\",\"backButton\":\"TakePhoto_backButton__mVHoW\",\"takePhotoButton\":\"TakePhoto_takePhotoButton__3jwSX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2yWJv\",\"footer\":\"App_footer__2nLYZ\",\"addToHome\":\"App_addToHome__3og-F\",\"accepted\":\"App_accepted__F_590\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TasksList_wrapper__19HVx\"};","import { Task } from '../models/Task';\r\nimport { Action } from './state.actions';\r\n\r\nexport type State = {\r\n    tasks: Task[];\r\n};\r\n\r\nexport const reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case 'LoadTasks':\r\n            return {\r\n                ...state,\r\n                tasks: [...action.value],\r\n            };\r\n\r\n        case 'UpdateTask': {\r\n            const taskIdx = state.tasks.findIndex(t => t._id === action.task._id);\r\n            if (!taskIdx) {\r\n                return state;\r\n            }\r\n            const tasks = state.tasks;\r\n            tasks[taskIdx] = { ...action.task };\r\n            return {\r\n                ...state,\r\n                tasks: [...tasks],\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initialState: State = {\r\n    tasks: [],\r\n};\r\n","import { initialState, reducer, State } from './state.reducer';\r\nimport { ReactNode, useReducer, createContext } from 'react';\r\nimport { Action } from './state.actions';\r\n\r\nexport const StateContext = createContext<\r\n    [State, (action: Action) => void]\r\n>([initialState, () => {}]);\r\n\r\nexport const StateProvider = ({ children }: { children: ReactNode }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    return (\r\n        <StateContext.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </StateContext.Provider>\r\n    );\r\n};\r\n","export const formatTime = (str?: string): string => {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n    try {\r\n        const date = new Date(str);\r\n        return `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n    } catch (e) {\r\n        return '';\r\n    }\r\n};\r\n","const maxWidth = 800;\r\nconst maxHeight = 800;\r\n\r\nexport const getImageFromFile = (source: File): Promise<HTMLImageElement> => {\r\n    const reader = new FileReader();\r\n    const promise = new Promise<HTMLImageElement>((resolve, reject) => {\r\n        reader.addEventListener('load', evt => {\r\n            if (evt.target?.readyState === FileReader.DONE) {\r\n                const image = new Image();\r\n                image.addEventListener('load', () => resolve(image));\r\n                image.src = evt.target.result as string;\r\n            } else {\r\n                reject('File could not be loaded');\r\n            }\r\n        });\r\n    });\r\n    reader.readAsDataURL(source);\r\n    return promise;\r\n};\r\n\r\nexport const getWebpDataUrl = (source: HTMLImageElement | HTMLVideoElement): string => {\r\n    const sourceWidth = source instanceof HTMLVideoElement ? source.videoWidth : source.width;\r\n    const sourceHeight = source instanceof HTMLVideoElement ? source.videoHeight : source.height;\r\n    const scaleDownFactor = Math.max(sourceHeight / maxHeight, sourceWidth / maxWidth, 1);\r\n    const outputWidth = sourceWidth / scaleDownFactor;\r\n    const outputHeight = sourceHeight / scaleDownFactor;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.height = outputHeight;\r\n    canvas.width = outputWidth;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx) {\r\n        throw new Error('Unable to create context');\r\n    }\r\n\r\n    ctx.drawImage(source, 0, 0, outputWidth, outputHeight);\r\n\r\n    return canvas.toDataURL('image/webp', 0.8);\r\n};\r\n","import { FC, memo, ChangeEvent } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './TaskCard.module.css';\r\nimport { Task } from '../../models/Task';\r\nimport { formatTime } from '../../utils/date.utils';\r\nimport { getWebpDataUrl, getImageFromFile } from '../../utils/image.utils';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    task: Task;\r\n    onPhotoRemove: (idx: number) => void;\r\n    onCompleteStep: () => void;\r\n    onReset: () => void;\r\n    onPhotoCaptureStart: () => void;\r\n    onImageAdded: (dataUrl: string) => void;\r\n}\r\n\r\nconst TaskCard: FC<IProps> = (props) => {\r\n    const {\r\n        className,\r\n        task,\r\n        onPhotoRemove,\r\n        onCompleteStep,\r\n        onPhotoCaptureStart,\r\n        onReset,\r\n        onImageAdded,\r\n    } = props;\r\n\r\n    const handleFile = async (evt: ChangeEvent<HTMLInputElement>) => {\r\n        const file = evt.target.files && evt.target.files[0];\r\n        if (file) {\r\n            const image = await getImageFromFile(file);\r\n            const dataUrl = getWebpDataUrl(image);\r\n            onImageAdded(dataUrl);\r\n        }\r\n    };\r\n    return (\r\n        <div className={cn(s.wrapper, className)}>\r\n            <header>\r\n                <div><b>{task.location}</b></div>\r\n                <div>{task.description}</div>\r\n            </header>\r\n            <div className={s.milestones}>\r\n                <ul>\r\n                    <li className={cn(s.milestone, task.travelStart && s.complete)}>\r\n                        <b>Travel started </b>\r\n                        <span>{formatTime(task.travelStart)}</span>\r\n                    </li>\r\n                    {task.travelStart && <li className={cn(s.milestone, task.travelEnd && s.complete)}>\r\n                      <b>Travel finished </b>\r\n                      <span>{formatTime(task.travelEnd)}</span>\r\n                    </li>}\r\n                    {task.travelEnd &&\r\n                    <li className={cn(s.milestone, task.workStart && s.complete)}>\r\n                      <b>Work started </b>\r\n                      <span>{formatTime(task.workStart)}</span>\r\n                    </li>\r\n                    }\r\n                    {task.workStart &&\r\n                    <li className={cn(s.milestone, task.workEnd && s.complete)}>\r\n                      <b>Work finished </b>\r\n                      <span>{formatTime(task.workEnd)}</span>\r\n                    </li>\r\n                    }\r\n                </ul>\r\n                <div className={s.buttons}>\r\n                    <button className={s.completeButton} onClick={onCompleteStep} disabled={!!task.workEnd}>▶</button>\r\n                    <button className={s.resetButton} onClick={onReset}>Reset</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.photos}>\r\n                {task.photos && task.photos.map((photo, idx) =>\r\n                    <div key={idx} className={s.photo} onClick={() => onPhotoRemove(idx)}>\r\n                        <img alt=\"\" src={photo}/>\r\n                        <span className={s.remove}>×</span>\r\n                    </div>,\r\n                )}\r\n            </div>\r\n            <div className={s.photoButtons}>\r\n                <div className={s.addPhoto} onClick={onPhotoCaptureStart}>\r\n                    📹\r\n                </div>\r\n                <label className={s.addPhoto}>\r\n                    📷\r\n                    <input className=\"visually-hidden\" type=\"file\" accept=\"image/*\" capture=\"environment\"\r\n                           onChange={handleFile}/>\r\n                </label>\r\n                <label className={s.addPhoto}>\r\n                    📎\r\n                    <input className=\"visually-hidden\" type=\"file\" accept=\"image/*\"\r\n                           onChange={handleFile}/>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(TaskCard);\r\n","import { FC, useRef, useState, useEffect, useCallback } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './TakePhoto.module.css';\r\nimport { getWebpDataUrl } from '../../utils/image.utils';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    onPhoto: (dataUrl: string) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nconst TakePhoto: FC<IProps> = ({ onPhoto, onCancel }) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    const [stream, setStream] = useState<MediaStream | null>(null);\r\n    const [isVideoReady, setReady] = useState<boolean>(false);\r\n    const [capabilities, setCapabilities] = useState<MediaTrackCapabilities | undefined>(undefined);\r\n\r\n    const initStream = useCallback(async () => {\r\n        if (videoRef.current) {\r\n            videoRef.current.addEventListener('loadedmetadata', () => {\r\n                console.log('video ready');\r\n                const capabilities = stream?.getVideoTracks()[0].getCapabilities();\r\n                setCapabilities(capabilities);\r\n                setReady(true);\r\n            });\r\n            videoRef.current.addEventListener('loadeddata', () => {\r\n                videoRef.current && videoRef.current.play();\r\n            });\r\n            videoRef.current.addEventListener('ended', () => {\r\n                console.log('stream ended');\r\n                setStream(null);\r\n                setReady(false);\r\n            });\r\n            const s = await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: {\r\n                    facingMode: 'environment',\r\n                },\r\n            });\r\n            console.log('setting stream');\r\n            setStream(s);\r\n            videoRef.current.srcObject = s;\r\n        }\r\n    }, [stream]);\r\n\r\n    const takePhoto = () => {\r\n        const video = videoRef.current;\r\n        if (!video) {\r\n            return;\r\n        }\r\n        onPhoto(getWebpDataUrl(video));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current;\r\n        if (!stream) {\r\n            initStream();\r\n        }\r\n        return () => {\r\n            video && video.pause();\r\n            stream && stream.getTracks().forEach(function (track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }, [initStream, stream]);\r\n\r\n    const handleTorchClick = useCallback((isTorchOn) => {\r\n        const tracks = stream?.getVideoTracks();\r\n        const videoTrack = tracks && tracks[0];\r\n        if (videoTrack && isVideoReady) {\r\n            // @ts-ignore\r\n            if (capabilities.torch) {\r\n                videoTrack.applyConstraints({\r\n                    // @ts-ignore\r\n                    advanced: [{ torch: isTorchOn }],\r\n                }).then(() => {\r\n                    console.log((`torch is ${isTorchOn ? 'on' : 'off'}`));\r\n                });\r\n            }\r\n        }\r\n    }, [capabilities?.torch, isVideoReady, stream]);\r\n\r\n    return (\r\n        <div className={cn(s.wrapper)}>\r\n            <video className={s.video} ref={videoRef} muted playsInline/>\r\n            <div className={s.buttons}>\r\n                <button className={s.backButton} onClick={onCancel}>Back</button>\r\n                <button className={s.takePhotoButton} onClick={takePhoto} disabled={!isVideoReady}>Take photo!</button>\r\n                <button className={s.torchButton} onClick={() => handleTorchClick(true)}\r\n                        disabled={!isVideoReady}>Flash\r\n                </button>\r\n            </div>\r\n            <div style={{ fontSize: '10px' }}>\r\n                {JSON.stringify(capabilities)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (TakePhoto);\r\n","import { FC, useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './TasksList.module.css';\r\nimport { Task } from '../../models/Task';\r\nimport TaskCard from '../TaskCard/TaskCard';\r\nimport TakePhoto from '../TakePhoto/TakePhoto';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    tasks: Task[];\r\n    onPhotoAdd: (task: Task, data: string) => void;\r\n    onPhotoRemove: (task: Task, index: number) => void;\r\n    onCompleteStep: (task: Task) => void;\r\n    onTaskReset: (task: Task) => void;\r\n}\r\n\r\nconst TasksList: FC<IProps> = ({ className, onPhotoRemove, tasks, onCompleteStep, onPhotoAdd, onTaskReset }) => {\r\n    const [photoTask, setPhotoTask] = useState<Task | null>(null);\r\n\r\n    return (\r\n        <div className={cn(s.wrapper, className)}>\r\n            <ul>\r\n                {tasks.map(task =>\r\n                    <li key={task._id}>\r\n                        <TaskCard\r\n                            task={task}\r\n                            onPhotoRemove={index => onPhotoRemove(task, index)}\r\n                            onPhotoCaptureStart={() => setPhotoTask(task)}\r\n                            onImageAdded={data => onPhotoAdd(task, data)}\r\n                            onCompleteStep={() => onCompleteStep(task)}\r\n                            onReset={() => onTaskReset(task)}/>\r\n                    </li>,\r\n                )}\r\n            </ul>\r\n            {photoTask && <TakePhoto onCancel={() => setPhotoTask(null)} onPhoto={(data) => {\r\n                onPhotoAdd(photoTask, data);\r\n                setPhotoTask(null);\r\n            }}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (TasksList);\r\n","import { Task } from '../models/Task';\r\n\r\nexport class LoadTasksAction {\r\n    readonly type = 'LoadTasks';\r\n\r\n    constructor(readonly value: Task[]) {\r\n    }\r\n}\r\n\r\nexport class UpdateTaskAction {\r\n    readonly type = 'UpdateTask';\r\n\r\n    constructor(readonly task: Task) {\r\n    }\r\n}\r\n\r\nexport class AddPhotoAction {\r\n    readonly type = 'AddPhoto';\r\n\r\n    constructor(readonly taskId: string, readonly photo: string) {\r\n    }\r\n}\r\n\r\nexport class RemovePhotoAction {\r\n    readonly type = 'RemovePhoto';\r\n\r\n    constructor(readonly taskId: string, readonly index: number) {\r\n    }\r\n}\r\n\r\nexport class CompleteStepAction {\r\n    readonly type = 'CompleteStep';\r\n\r\n    constructor(readonly taskId: string) {\r\n    }\r\n}\r\n\r\nexport class ResetTaskAction {\r\n    readonly type = 'ResetTask';\r\n\r\n    constructor(readonly taskId: string) {\r\n    }\r\n}\r\n\r\nexport type Action = LoadTasksAction | AddPhotoAction | RemovePhotoAction | CompleteStepAction | ResetTaskAction | UpdateTaskAction;\r\n","import { Task } from '../models/Task';\r\n\r\nconst base = 'https://crudcrud.com/api/1aa10a5e89e24398bd56391f380dddd3';\r\n\r\nexport async function fetchTasks() {\r\n    const response = await fetch(`${base}/tasks`);\r\n    const tasks: Task[] = await response.json();\r\n    return tasks;\r\n}\r\n\r\nexport async function updateTask(task: Task) {\r\n    const { _id, ...content } = task;\r\n    const response = await fetch(`${base}/tasks/${_id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(content),\r\n    });\r\n    return response;\r\n}\r\n","import { FC, useContext, useEffect } from 'react';\r\n\r\nimport s from './TasksScene.module.css';\r\nimport TasksList from '../../components/TasksList/TasksList';\r\nimport { StateContext } from '../../state/state.context';\r\nimport { Task } from '../../models/Task';\r\nimport { LoadTasksAction, UpdateTaskAction } from '../../state/state.actions';\r\nimport { fetchTasks, updateTask } from '../../services/data.service';\r\n\r\ninterface IProps {\r\n}\r\n\r\nconst TasksScene: FC<IProps> = () => {\r\n    const [{ tasks }, dispatch] = useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        fetchTasks().then(tasks => dispatch(new LoadTasksAction(tasks)));\r\n    }, [dispatch]);\r\n\r\n    const savePhoto = (task: Task, dataUrl: string) => {\r\n        const photos = task.photos || [];\r\n        const updated = { ...task, photos: [...photos, dataUrl] };\r\n        updateTask(updated);\r\n        dispatch(new UpdateTaskAction(updated));\r\n\r\n    };\r\n\r\n    const removePhoto = (task: Task, index: number) => {\r\n        const photos = [...task.photos];\r\n        const updated = { ...task, photos: photos.splice(index, 1) };\r\n        updateTask(updated);\r\n        dispatch(new UpdateTaskAction(updated));\r\n    };\r\n\r\n    const stepTask = (task: Task) => {\r\n        const updated = {\r\n            ...task,\r\n        };\r\n        if (updated.workEnd) {\r\n        } else if (updated.workStart) {\r\n            updated.workEnd = new Date().toISOString();\r\n        } else if (updated.travelEnd) {\r\n            updated.workStart = new Date().toISOString();\r\n        } else if (updated.travelStart) {\r\n            updated.travelEnd = new Date().toISOString();\r\n        } else {\r\n            updated.travelStart = new Date().toISOString();\r\n        }\r\n        updateTask(updated);\r\n        dispatch(new UpdateTaskAction(updated));\r\n    };\r\n\r\n    const resetTask = (task: Task) => {\r\n        const updated = {\r\n            ...task,\r\n            workEnd: undefined,\r\n            workStart: undefined,\r\n            travelEnd: undefined,\r\n            travelStart: undefined,\r\n        };\r\n        updateTask(updated);\r\n        dispatch(new UpdateTaskAction(updated));\r\n    };\r\n\r\n    return (<div className={s.wrapper}>\r\n            <TasksList tasks={tasks}\r\n                       onPhotoRemove={removePhoto}\r\n                       onPhotoAdd={savePhoto}\r\n                       onCompleteStep={stepTask}\r\n                       onTaskReset={resetTask}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default (TasksScene);\r\n","import React, { useState } from 'react';\r\nimport s from './App.module.css';\r\nimport { StateProvider } from './state/state.context';\r\nimport TasksScene from './scenes/TasksScene/TasksScene';\r\nimport { useEventListener } from './hooks/useEventListener';\r\n\r\nconst version = process.env.REACT_APP_VERSION;\r\n\r\nconst App = () => {\r\n    const [beforeInstallEvent, setBeforeInstallEvent] = useState<BeforeInstallPromptEvent | null>(null);\r\n    const [isAccepted, setAccepted] = useState(false);\r\n\r\n    useEventListener('beforeinstallprompt', (evt: BeforeInstallPromptEvent) => {\r\n        evt.preventDefault();\r\n        setBeforeInstallEvent(evt);\r\n    });\r\n\r\n    const handleAdd = (evt: BeforeInstallPromptEvent) => () => {\r\n        evt.prompt();\r\n        // Wait for the user to respond to the prompt\r\n        evt.userChoice.then((choiceResult) => {\r\n            setAccepted(choiceResult.outcome === 'accepted');\r\n            setTimeout(() => setAccepted(false), 5000);\r\n            setBeforeInstallEvent(null);\r\n\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {beforeInstallEvent &&\r\n            <button className={s.addToHome} onClick={handleAdd(beforeInstallEvent)}>Add to Home</button>\r\n            }\r\n            {isAccepted && <div className={s.accepted}>Added to Home Screen</div>}\r\n            <StateProvider>\r\n                <TasksScene/>\r\n            </StateProvider>\r\n\r\n            {version && <footer className={s.footer}>version {version} UA {navigator.userAgent}</footer>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { useRef, useEffect, EventHandler } from 'react';\r\n\r\nexport const useEventListener = (eventName: string, handler: EventHandler<any>, element: Element | Window = window) => {\r\n    const handlerRef = useRef<EventHandler<any>>();\r\n\r\n    // Update ref.current value if handler changes.\r\n    // This allows our effect below to always get latest handler\r\n    // without us needing to pass it in effect deps array\r\n    // and potentially cause effect to re-run every render.\r\n    useEffect(() => {\r\n        handlerRef.current = handler;\r\n    }, [handler]);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (!handlerRef.current) {\r\n                return;\r\n            }\r\n            const handler = handlerRef.current;\r\n            const eventListener = (event: Event) => handler(event);\r\n            element.addEventListener(eventName, eventListener);\r\n\r\n            return () => {\r\n                element.removeEventListener(eventName, eventListener);\r\n            };\r\n        },\r\n        [eventName, element],\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}